{{ $deployRole := .Values.tonicai.tim_server.install_job.deploy_role_name | default "tonic-tim-deploy-role" | quote }}

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.serviceAccount.name }}
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "tonic-tim-mgmt-role"
rules:
- apiGroups: ["", "app", "batch", "rbac.authorization.k8s.io"]
  resources: ["jobs", "rolebindings", "serviceaccounts", "namespaces", "secrets"]
  verbs: ["get", "list", "create", "delete", "watch", "update"]
- apiGroups: ["", "apps"]
  resources: ["pods", "pods/log", "deployments", "replicasets"]
  verbs: ["get", "list", "watch" ]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles"]
  verbs: ["bind"]
  resourceNames: [ {{$deployRole}} ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ $deployRole }}
rules:
- apiGroups: ["", "extensions", "apps" ]
  resources: ["pods", "pods/log", "deployments", "replicasets", "secrets", "serviceaccounts"]
  verbs: ["create", "delete", "get", "list", "watch", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "tonic-tim-mgmt-crb"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "tonic-tim-mgmt-role"
subjects:
- kind: ServiceAccount
  name: {{ .Values.serviceAccount.name }}
  namespace: {{ .Release.Namespace }}

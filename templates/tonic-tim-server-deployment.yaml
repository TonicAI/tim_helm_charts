apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tonic-tim-server
  name: tonic-tim-server
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tonic-tim-server
  strategy: {}
  template:
    metadata:
      labels:
        app: tonic-tim-server
    spec:
      containers:
      - env:
        - name: ENABLE_LOG_COLLECTION
          value: "true"
        - name: ASPNETCORE_URLS
          value: http://+:5000
        - name: TIM_DB_DATABASE
          value: {{ .Values.timdb.dbName }}
        - name: TIM_DB_USERNAME
          value: {{ .Values.timdb.user }}
        - name: TIM_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tim-db-password
              key: password
        - name: TIM_DB_PORT
          value: {{quote .Values.timdb.port }}
        - name: TIM_DB_SSLMODE
          value: {{ .Values.timdb.sslMode }}
        - name: TIM_DB_HOST
          value: {{ .Values.timdb.host }}
{{- if (.Values.tonicai.tim_server.install_job).install_image_path }}
        - name: INSTALL_IMAGE_PATH
          value: {{ .Values.tonicai.tim_server.install_job.install_image_path }}
{{- end }}
{{- if (.Values.tonicai.tim_server.install_job).install_image_command }}
        - name: INSTALL_IMAGE_COMMAND
          value: {{ join "," .Values.tonicai.tim_server.install_job.install_image_command }}
{{- end }}
{{- if (.Values.tonicai.tim_server.install_job).deploy_role_name }}
        - name: DEPLOY_ROLE_NAME
          value: {{ .Values.tonicai.tim_server.install_job.deploy_role_name }}
{{- end }}
{{- if (.Values.tonicai.tim_server.install_job).install_image_pull_policy }}
        - name: INSTALL_IMAGE_PULL_POLICY
          value: {{ .Values.tonicai.tim_server.install_job.install_image_pull_policy }}
{{- end }}
{{- if  ((.Values.tonicai).tim_server).image }}
        image: {{ .Values.tonicai.tim_server.image }}:{{ .Values.timVersion }}
{{ else }}
        image: tim_server_unprivileged:{{ .Values.timVersion }}
{{- end }}
        imagePullPolicy: Never
        name: tonic-tim-server
        ports:
        - containerPort: 5000
          name: "http"
        # - containerPort: 5001
        #   name: "https"
        resources:
          limits:
            memory: "1Gi"
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 80
        #   initialDelaySeconds: 60
        #   periodSeconds: 5
        # readinessProbe:
        #   httpGet:
        #     path: /health
        #     port: 80
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
      restartPolicy: Always
      serviceAccountName: {{ .Values.serviceAccount.name }}
      volumes: null
status: {}

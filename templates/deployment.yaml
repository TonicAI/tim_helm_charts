{{- $volumes := .Values.volumes }}
{{- $image := include "timothy.image" . }}
{{- $httpsEnabled := include "timothy.httpsEnabled" . }}
{{- $httpEnabled := include "timothy.httpEnabled" . }}
{{- if and (not $httpEnabled) (not $httpsEnabled) }}
{{- fail "Either http or https must be enabled, both cannot be disabled" }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "timothy.fullname" . }}
  labels:
    {{- include "timothy.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "timothy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "timothy.selectorLabels" . | nindent 8 }}
      annotations:
        {{- $annotations := merge .Values.global.annotations .Values.annotations }}
        {{- if $annotations }}
        {{- toYaml $annotations | nindent 8 }}
        {{- end }}
        {{- /* the checksums cause tim to redeploy if its configurations change */}}
        checksum/database: {{ include (print $.Template.BasePath "/database-access-secret.yaml") . | sha256sum }}
        checksum/nginx: {{ include (print $.Template.BasePath "/nginx-configuration.yaml") . | sha256sum }}
        {{- if ( include "timothy.usingBundledCerts" . ) }}
        checksum/certs: {{ include (print $.Template.BasePath "/nginx-certificates.yaml") . | sha256sum }}
        {{- end }}
    spec:
      initContainers:
        - name: web-ui
          image: {{ $image }}
          imagePullPolicy: {{ coalesce .Values.image.pullPolicy .Values.global.pullPolicy "IfNotPresent" }}
          args: ["copy-frontend", "/etc/shared/nginx"]
          volumeMounts:
            - name: web-ui
              mountPath: /etc/shared/nginx
      containers:
        - name: timothy
          image: {{ $image }}
          imagePullPolicy: {{ coalesce .Values.image.pullPolicy .Values.global.pullPolicy "IfNotPresent" }}
          args: ["start"]
          {{- if $volumes }}
          volumeMounts:
            {{- range $volumes }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
          {{- end }}
          env:
            {{- with .Values.configuration }}
            {{- range $key, $value := .env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- with .envRaw }}
            {{- if . }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- with .Values.configuration.database }}
            {{- $dbValues := omit . "username" "password" "secretName" }}
            {{- range $key, $value := $dbValues }}
            - name: TIM_DB_{{ $key | upper }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            {{- /* hardcode this last since we internally depend on knowing this port number */}}
            - name: ASPNETCORE_URLS
              value: http://localhost:5000
          envFrom:
            - secretRef:
                name: {{ include "timothy.databaseSecretName" . }}
                optional: false
        - name: nginx
          image: {{ include "timothy.globalImageRepo" . }}nginx:latest
          ports:
            {{- if $httpsEnabled }}
            - containerPort: {{ required "https port is required if https is enabled" .Values.networking.https.port }}
              name: https
            {{- end }}
            {{- if $httpEnabled }}
            - containerPort: {{ required "http port is required if http is enabled" .Values.networking.http.port }}
              name: http
            {{- end }}
          volumeMounts:
            - name: web-ui
              mountPath: /etc/tim/frontend
            - name: nginx-configuration
              mountPath: "/etc/nginx/conf.d"
            {{- if $httpsEnabled }}
            - name: nginx-certificates
              mountPath: "/etc/tim/certs"
              readOnly: true
            {{- end }}
      restartPolicy: {{ coalesce .Values.global.restartPolicy .Values.restartPolicy }}
      serviceAccountName: {{ include "timothy.serviceAccountName" . }}
      imagePullSecrets:
        {{- $globalPullSecrets := list -}}
        {{- if .Values.global.pullSecrets -}}
        {{- $globalPullSecrets = .Values.global.pullSecrets -}}
        {{- end -}}
        {{- $pullSecrets := compact (append $globalPullSecrets .Values.global.tonicPullSecret) -}}
        {{- range $pullSecrets }}
        - name: {{ .name }}
        {{- end }}
      volumes:
        {{- range $volumes }}
        - name: {{ .name }}
        {{- toYaml .details | nindent 10 }}
        {{- end }}
        - name: nginx-configuration
          configMap:
            name: {{ include "timothy.fullname" . }}-nginx-config
        - name: web-ui
          emptyDir: {}
        {{- if $httpsEnabled }}
        - name: nginx-certificates
          secret:
            secretName: {{ include "timothy.nginxCertificateSecretName" . }}
            optional: false
        {{- end }}
